<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/9/20
 * Time: 10:58
 */

namespace app\admino\controller;

use app\common\controller\BaseController;
use app\common\model\PickGroupCommentModel;
use app\common\model\PickGroupModel;
use app\common\model\SystemModel;
use app\common\model\UserModel;
use think\db\Query;
use think\Request;

class PickGroupByShadow extends SingleTableBase
{
    protected $model = "pick_group";
    protected $primary_show = false;
    protected $title = "影子pick管理";

    protected $is_del = false;
    protected $is_add = false;
//    protected $is_edit = false;
    protected $table_header = [
        "left_user_name" => 'pick用户',
        "left_votes_num" => '左边票数',
        "left_cheese_card" => 'pick卡片',
        "right_cheese_card" => '被pick卡片',
        "right_votes_num" => '右边票数',
        "right_user_name" => '被pick用户',
        "comment_total" => '评论数',
        "recommend_weights" => '是否推荐',
        "created_at" => "开始时间"
    ];



    protected $table_header_more = [
        "left_votes_num" => '左边票数',
        "right_votes_num" => '右边票数',
        "recommend_weights" => '是否推荐',
    ];

    protected $table_option = [
        "left_cheese_card" => [
            'type' => self::TYPE_TX_COS,
            "host" => SystemModel::TX_COS_HOST,
            'path' => "user-card",
        ],
        "right_cheese_card" => [
            'type' => self::TYPE_TX_COS,
            "host" => SystemModel::TX_COS_HOST,
            'path' => "user-card",
        ],
        "recommend_weights" => [
            'type' => self::TYPE_SELECT,
            "data" => [
                "0" => "否",
                "1" => "是",
            ]
        ]
    ];

    protected $filter_header = [
        "left_user_name", "right_user_name", "recommend_weights"
    ];

    protected $table_ext_button_iframe = [
        "评论" => "/Admino/PickGroupComment/index"
    ];

    protected function dataIterator(&$data)
    {
        $pk = PickGroupModel::getInstance()->where(["id" => $data["id"]])->getAssembly();
        $data["left_cheese_card"] = $pk["left_cheese_card"]["full_pic_url"];
        $data["right_cheese_card"] = $pk["right_cheese_card"]["full_pic_url"];
        $data["comment_total"] = $pk["comment_total"];
        parent::dataIterator($data); // TODO: Change the autogenerated stub
    }

    protected function data(Query $model, $page, $search, $filter = false, $w = [])
    {
        return parent::data($model, $page, $search, $filter, [
            "is_shadow" => 1
        ]); // TODO: Change the autogenerated stub
    }

    //查看评论
    public function getComment($pick_group_id)
    {
        $data = PickGroupCommentModel::getInstance()->where('id', $pick_group_id)->select();
        $this->displayByData($data);
    }

    //设置一个pick组为推荐或者取消推荐
    public function Recommend($pick_group_id)
    {
        $row = PickGroupModel::getInstance()->where('id', $pick_group_id)->find();
        if ($row['recommend_weights'] == 0) {
            PickGroupModel::getInstance()->where('id', $pick_group_id)->save(['recommend_weights' => 1]);
            $this->displayBySuccess('设置推荐成功');
        }
        if ($row['recommend_weights'] == 1) {
            PickGroupModel::getInstance()->where('id', $pick_group_id)->save(['recommend_weights' => 0]);
            $this->displayBySuccess('取消推荐');
        }
    }

    //调整投票数
    public function changeVotes()
    {
        $data = Request::instance()->param();
        if (PickGroupModel::getInstance()->save($data)) {
            $this->displayBySuccess();
        }
    }

    public function indexShadow($page = 1)
    {
        //计算影子账户的pick总数
        $data['count'] = PickGroupModel::getInstance()->where('is_shadow', 'SHADOW')->count();
        //查询影子账户pick组列表
        $data['list'] = PickGroupModel::getInstance()->where('is_shadow', 'SHADOW')->page($page, 10)->getAssemblyList();
        for ($i = 0; $i < count($data['list']); $i++) {
            //查询出所有评论
            $data['list'][$i]['comment'] = PickGroupCommentModel::getInstance()->where('pick_group_id', $data['list'][$i]['id'])->count();
        }
        $this->displayByData($data);
    }
}