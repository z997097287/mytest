<?php
/**
 * Created by PhpStorm.
 * User: admin
 * Date: 2018/8/20
 * Time: 10:20
 */

namespace app\admino\controller;


//卡片列表
use app\common\model\CheeseCardModel;
use app\common\model\SystemModel;
use app\common\model\UserModel;
use think\db\Query;
use think\Session;

class CheeseCardShadowByUser extends SingleTableBase
{
    protected $model = "cheese_card";
    protected $title = "我的账户卡片管理";
    protected $save_view = "/cheesecardshadowbyuser/save";

    protected $table_header = [
        "user_id" => "用户编号",
        "pic_url" => "图片",
        "text" => "短语",
        "tag" => "标签",
        "review_status" => "审核状态",
        "created_at" => "上传时间"
    ];
    protected $table_header_more = [
        "user_id" => "用户编号",
        "pic_url" => "图片地址",
        "full_pic_url" => "卡片预览",
        "tag" => "标签",
        "text" => "短语",
        "star" => "点赞数",
//        "is_delete" => "是否删除",
    ];
    protected $table_option = [
        "review_status" => [
            'type' => self::TYPE_SELECT,
            "data" => [
                "NONE" => "未审核",
                "SUCCESS" => "审核通过",
                "FAIL" => "审核未通过",
            ]
        ],
        "star" => [
            'type' => self::TYPE_NUM,
        ],
        "user_id" => [
            'type' => self::TYPE_DISABLED_TEXT,
        ],
        "pic_url" => [
            'type' => self::TYPE_TX_COS,
            "host" => SystemModel::TX_COS_HOST,
            'path' => "user-card",
        ],
        "full_pic_url" => [
            'type' => self::TYPE_TX_COS,
            "host" => SystemModel::TX_COS_HOST,
            'path' => "user-card",
        ],
        "user_name" => [
            'type' => self::TYPE_DISABLED_TEXT,
            "table_width" => "100"
        ]
    ];

    protected $filter_header = ["text", "tag"];

    protected function data(Query $model, $page, $search, $filter = false, $w = [])
    {
        $user = Session::get("user");
        return parent::data($model, $page, $search, $filter, ["user_id" => $user["user_id"], "user_type" => "SHADOW", "is_delete|review_status" => ["in", ["0", "NONE"]],]); // TODO: Change the autogenerated stub
    }

    protected function dataIterator(&$data)
    {
        $user = Session::get("user");
        $user_id = $user["user_id"];
        $data["user_id"] = $user_id;
        if (!empty($data["tag"])) {
            $data["tag"] = implode(",", json_decode($data["tag"]));
        }
    }

    protected function saveDataFilter(&$data)
    {
        $data["tag"] = explode(",", $data["tag"]);
        if (!is_array($data["tag"])) {
            $this->displayByError("标签有误,标签之间用英文逗号隔开");
        }
        $data["tag"] = json_encode($data["tag"], JSON_UNESCAPED_UNICODE);
    }

    public function delete($id)
    {
        CheeseCardModel::getInstance()->where(["id" => $id])->save([
            "is_delete" => 1,
            "review_status" => "DELETE"
        ]);
        $this->displayBySuccess();
    }

    public function save($id = 0)
    {
        if ($_POST) {
            $user = Session::get("user");
            $user_id = $user["user_id"];
            $user_data = UserModel::getInstance()->where(["id" => $user_id])->getAssembly();
            $_POST += [
                "user_id" => $user_id,
                "user_name" => $user_data["nickName"],
                "user_type" => $user_data['type'],
                "review_status" => "NONE",
                "is_delete" => 1,
                "created_at" => date("Y-m-d H:i:s", time()),
            ];
        }
        parent::save($id);
    }


}